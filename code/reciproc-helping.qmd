---
title: "Likelihood of helping - reciprocity"
author: "Liza Moscovice, Anja Eggert and Jean-Loup Rault"
date: "`r Sys.Date()`" 
editor: visual
code-fold: false
toc: true
format: html
---

# Libraries

```{r, libraries, warning=FALSE, message=FALSE, echo=TRUE}
library(tidyverse)     # tidy universe
library(viridis)       # colors
library(glmmTMB)       # neg. binomial model
library(performance)   # model performance
library(DHARMa)        # model diagnostics
```

```{r, my_theme, echo = FALSE}
my_theme = theme_classic() +
  theme(axis.title = element_text(face="bold", size=14),
        axis.text  = element_text(size=12, angle = 0, vjust = 0.5),
        plot.title = element_text(face="bold", size=14),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r, seed}
set.seed(1989)
```

# Data

Data analysis from the point of view of the helping pigs.

## Read data

```{r, data, warning = FALSE}
dat <- read_csv("../data/reciproc-helping.csv")
```

## Adjust data types

```{r, data-adj}
dat <- dat %>% 
  mutate_at(vars(pot.helper.helped.by.trapped.before,
                 trapped.before,
                 pretrial.open.yn,
                 pothelper.sex,
                 related,
                 pot.helper.uniq.id), ~as.factor(.)) %>% 
  mutate(group.trapped.pig.order.z = as.vector(scale(group.trapped.pig.order)))
  
str(dat)
```

# Zero-inflated negative binomial model

The zero-inflation model describes the probability of observing an extra (i.e., structural) zero that is not generated by the conditional model.

-   fit the model with zero-inflation is assumed to be constant across the data set (`ziformula = ~ 1`), *i.e.*, zero-inflation is independent of the predictor variables
-   chose `family = negbinom2`, *i.e.*, a negative binomial distribution in which the variance increases quadratically with the mean

## Run full model

```{r, model-contr}
contr = glmmTMBControl(optimizer = optim, optArgs = list(method="BFGS"))
```

```{r, model-full}
mod <- glmmTMB(pot.helper.response ~
                 # fixed, continuous predictors
                 group.trapped.pig.order.z           +
                 # fixed, categorical predictors
                 pot.helper.helped.by.trapped.before +  
                 trapped.before                      +
                 pretrial.open.yn                    + 
                 pothelper.sex                       + 
                 related                             + 
                 # random effects
                 (1|pot.helper.uniq.id),
               # Negative binomial distribution
               family = "nbinom2",
               # expect zero-inflation equal in all obs
               ziformula = ~ 1,
               # data set
               data   = dat,
               # numerical optimizer
               control = contr)
```

## Run reduced model

```{r, model-reduced}
mod.red <- glmmTMB(pot.helper.response ~
                     # fixed, continuous predictors
                     group.trapped.pig.order.z           +
                     # fixed, categorical predictors
                     pretrial.open.yn                    + 
                     pothelper.sex                       + 
                     related                             + 
                     # random effects
                     (1|pot.helper.uniq.id),
                   # Negative binomial distribution
                   family = "nbinom2",
                   # expect zero-inflation equal in all obs
                   ziformula = ~ 1,
                   # data set
                   data   = dat,
                   # numerical optimizer
                   control = contr)
```

## Model comparison

-   Likelihood ratio test compares goodness of fit of of the reduced and the full model, *i.e.*, determine whether or not adding complexity (adding more parameters) makes the full model significantly more accurate

```{r}
anova(mod.red, mod, test='Chisq')
```

## Summary of model

```{r, model-summary}
summary(mod)
```

```{r, model-table}
car::Anova(mod)
```

## Performance of model

-   `performance` package used to check model assumptions

```{r, perf-1}
performance::check_collinearity(mod)
```

```{r, perf-2}
performance::check_overdispersion(mod)
```

-   `DHARMa` package used to test for zero-inflation, which compares the distribution of expected zeros from simulations against the observed zeros

```{r, perf-3}
DHARMa::testZeroInflation(mod)
```

# Plot

-   visualize how probability of helping is related to the fact if the pig was helped by the trapped pig before

```{r, data-plot}
dat.helped <- dat %>% 
  select(pot.helper.uniq.id,
         pot.helper.response,
         pot.helper.helped.by.trapped.before) %>% 
  # calculate probability per pig (75 pigs in total)
  group_by(pot.helper.uniq.id, pot.helper.helped.by.trapped.before) %>% 
  summarize(prob.helped = sum(pot.helper.response)/n(),
            nr.helped   = sum(pot.helper.response),
            n_trials    = n()) %>% 
  ungroup() %>% 
  mutate(uniq.group = str_sub(pot.helper.uniq.id,1,5))
```

```{r, plot-1}
plot <- dat.helped %>% 
  ggplot(aes(x    = pot.helper.helped.by.trapped.before,
             y    = prob.helped)) +
  # scale = count: areas prop. to nr. of obs.
  geom_violin(scale = "count", fill = "grey90", col = "grey90")+
  geom_jitter(aes(col  = as.factor(uniq.group), 
                  size = factor(n_trials, order = TRUE)),
              width = 0.15, alpha = 0.7) +
  stat_summary(fun = mean, geom = "point", 
               shape = 22, size = 7, color = "black", fill = "grey60") +
  scale_color_manual(values = viridis(n=8),
                     guide  = "none") +
  scale_y_continuous(lim = c(-0.05, 1.05), breaks = seq(0, 1, 0.2)) +
  scale_x_discrete(labels= c("No", "Yes"), expand = expansion(add =0.8)) +
  scale_size_discrete(breaks = c(1, 5, 9), labels = c("1", "5", "9"))+
  labs(x    = "Helped by trapped pig before",
       y    = "Probability of helping",
       size = "Number of trials") +
  my_theme
```

```{r, plot-2, fig.height=8, fig.width=10, warning=FALSE}
plot
```

# How to cite R

"All analyses were performed using R Statistical Software (version 4.2.0; R Core Team 2022)".

Reference: R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

```{r, cite-r}
citation()
version$version.string
```

```{r, cite-packages}
citation("tidyverse")
citation("viridis")
citation("glmmTMB")
citation("performance")
citation("DHARMa")
```

# Session Info

```{r, session}
sessionInfo()
```
