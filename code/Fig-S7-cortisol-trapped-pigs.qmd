---
title: "Behavioral responses to being trapped and changes in cortisol in trapped pigs"
author: "Liza Moscovice, Anja Eggert, Christian Manteuffel and Jean-Loup Rault"
date: "`r Sys.Date()`" 
editor: visual
code-fold: false
toc: true
format: html
self-contained: true
---

# Libraries

```{r, libraries, warning=FALSE, message=FALSE, echo=TRUE}
library(tidyverse)     # tidy universe
library(lmerTest)      # mixed model lme4 with p-values
library(emmeans)       # emmeans
library(ggpubr)        # special ggplots
```

```{r, my_theme, echo = FALSE}
my_theme = theme_classic() +
  theme(axis.title = element_text(face="bold", size=14),
        axis.text  = element_text(size=12, angle = 0, vjust = 0.5),
        plot.title = element_text(face="bold", size=14),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r, seed}
set.seed(1989)
```

# Data

## Read data

```{r, data}
dat <- read_csv("../data/Fig-S8-cortisol-trapped-pigs.csv")
```

## Adjust data types

```{r, data-adj}
dat <- dat %>% 
  mutate_at(vars(test.day,
                 daily.test.order.within.group), ~as.factor(.))
```

## Data summary

```{r, data-sum}
dat %>% 
  group_by(context) %>% 
  rstatix::get_summary_stats(c(cort), 
                             show = c("mean", "sd",
                                      "min", "max",
                                      "median", "iqr")) %>% 
  ungroup()
```

# Linear mixed model

## Run full model

```{r, mod-cont}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

```{r, mod}
mod <- lmer(sqrt(cort) ~ 
              # test predictors
              context*as.vector(scale(sqrt(distress.rate)))+ 
              context*as.vector(scale(sqrt(invest.window.rate)))+ 
              context*as.vector(scale(sqrt(dur.separated))) + 
              context*as.vector(scale(log(dur.trapped.min))) +  
              # control predictors
              sex + 
              test.day + 
              daily.test.order.within.group + 
              as.vector(scale(sample.time.hr)) + 
              # random/nested factors
              (1|unique.group) + 
              (1|trapped.pig.unique.id),
            data    = dat,
            REML    = TRUE,
            control = contr)
```

## Run reduced model

```{r, mod-red}
mod.red <- lmer(sqrt(cort) ~ 
              # no test predictors
              # control predictors
              sex + 
              test.day + 
              daily.test.order.within.group + 
              as.vector(scale(sample.time.hr)) + 
              # random/nested factors
              (1|unique.group) + 
              (1|trapped.pig.unique.id),
            data    = dat,
            REML    = TRUE,
            control = contr)
```

## Model comparison

```{r, mod-anova}
anova(update(mod.red, REML = FALSE), 
      update(mod, REML = FALSE), 
      test = "Chisq")
```

## Summary of model

```{r, mod-sum-1}
summary(mod)
```

```{r, mod-sum-2}
round(drop1(mod,test = 'Chisq'),3)
as.data.frame(round(confint(object = mod),3)) 
```

## Performance of model

```{r, mod-perf, fig.height=25, fig.width=10, warning=FALSE }
performance::check_model(mod)
```

# Plot

```{r, dat-plot}
dat.plot <- dat %>% 
  select(cort, context, distress.rate) %>% 
  mutate(distress.cat = case_when(distress.rate < 1 ~ "low",
                                       TRUE ~ "high")) %>%
  select(-distress.rate) %>% 
  group_by(context, distress.cat) %>% 
  # unique identifier row for pivot_wider()
  mutate(row = row_number()) %>%
  pivot_wider(names_from = context, values_from = cort) %>% 
  select(-row) %>% 
  ungroup()

dat.plot$distress.cat <- factor(dat.plot$distress.cat, levels = c("low", "high"))
```

```{r, plot-1}
plot <- dat.plot %>% 
  ggpaired(cond1="pre", 
           cond2="post",
           color="condition", 
           palette=c("orchid","orchid4"),
           line.color="gray",
           line.size=0.3,
           legend="none",
           point.size=3, 
           ylab="Cortisol (ng/mL)", 
           xlab="Sample context",
           facet.by="distress.cat") + 
  scale_x_discrete(labels=c("pre-trapped","post-trapped")) +
  scale_y_continuous(breaks=seq(0,12,by=2)) + 
  facet_wrap(~distress.cat, 
             labeller= labeller(distress.cat = 
                                  c("low" = "Fewer distress signals", 
                                    "high" = "More distress signals"))) +
  my_theme +
  theme(strip.text = element_text(size = 14),
        legend.position = "none")
```

```{r, plot-2}
plot
```

# How to cite R

"All analyses were performed using R Statistical Software (version 4.2.0; R Core Team 2022)".

Reference: R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

```{r, cite-r}
citation()
version$version.string
```

```{r, cite-packages}
citation("tidyverse")
citation("lmerTest")
citation("emmeans")
citation("ggpubr")
```

# Session Info

```{r, session}
sessionInfo()
```
